import os
from sqlalchemy import create_engine
import pandas as pd
import io
from google.cloud import storage
import base64

def upload_to_mysql(event, context):
    # 환경 변수에서 DB 연결 정보 가져오기
    instance_connection_name = os.getenv('INSTANCE_CONNECTION_NAME')
    db_user = os.getenv('DB_USER')
    db_password = os.getenv('DB_PASSWORD')
    db_name = os.getenv('DB_NAME')

    # Cloud SQL 인스턴스와의 연결을 위해 unix_socket을 사용합니다.
    db_socket_dir = os.getenv("DB_SOCKET_DIR", "/cloudsql")
    cloud_sql_connection_name = f"{db_socket_dir}/{instance_connection_name}"

    db_url = f"mysql+pymysql://{db_user}:{db_password}@/{db_name}?unix_socket={cloud_sql_connection_name}"
    engine = create_engine(db_url)

    # Pub/Sub 메시지에서 파일 경로 가져오기
    message = base64.b64decode(event['data']).decode('utf-8')
    print(f"Received message: {message}")

    # Cloud Storage에서 CSV 파일 읽기
    storage_client = storage.Client()
    bucket_name = os.getenv('BUCKET_NAME')
    bucket = storage_client.bucket(bucket_name)
    
    # 파일 경로를 설정하여 적절한 위치에서 파일을 찾도록 설정
    file_path = f"Big_Query_Exam/{message}"
    blob = bucket.blob(file_path)
    csv_data = blob.download_as_string()

    # CSV 데이터를 Pandas DataFrame으로 변환
    df = pd.read_csv(io.StringIO(csv_data.decode('utf-8')))

    # MySQL에 데이터 업로드
    with engine.connect() as connection:
        df.to_sql('exam_example', con=connection, if_exists='replace', index=False)

    return "CSV data uploaded to MySQL.", 200

###########################
txt 파일

pandas
SQLAlchemy
google-cloud-storage
google-cloud-pubsub
pymysql
